[{"/Users/bubird/Documents/GitHub/femmehacks-pomodoer-app/src/index.js":"1","/Users/bubird/Documents/GitHub/femmehacks-pomodoer-app/src/App.js":"2","/Users/bubird/Documents/GitHub/femmehacks-pomodoer-app/src/reportWebVitals.js":"3","/Users/bubird/Documents/GitHub/femmehacks-pomodoer-app/src/Timer.js":"4","/Users/bubird/Documents/GitHub/femmehacks-pomodoer-app/src/ToDoList.js":"5","/Users/bubird/Documents/GitHub/femmehacks-pomodoer-app/src/Collab.js":"6","/Users/bubird/Documents/GitHub/femmehacks-pomodoer-app/src/Home/Home.js":"7","/Users/bubird/Documents/GitHub/femmehacks-pomodoer-app/src/useList.js":"8","/Users/bubird/Documents/GitHub/femmehacks-pomodoer-app/src/useTimer.js":"9","/Users/bubird/Documents/GitHub/pomodoer/src/index.js":"10","/Users/bubird/Documents/GitHub/pomodoer/src/App.js":"11","/Users/bubird/Documents/GitHub/pomodoer/src/reportWebVitals.js":"12","/Users/bubird/Documents/GitHub/pomodoer/src/Collab.js":"13","/Users/bubird/Documents/GitHub/pomodoer/src/Home/Home.js":"14","/Users/bubird/Documents/GitHub/pomodoer/src/Timer.js":"15","/Users/bubird/Documents/GitHub/pomodoer/src/ToDoList.js":"16","/Users/bubird/Documents/GitHub/pomodoer/src/useTimer.js":"17","/Users/bubird/Documents/GitHub/pomodoer/src/useList.js":"18"},{"size":500,"mtime":1614284008585,"results":"19","hashOfConfig":"20"},{"size":416,"mtime":1614289766934,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1612627631356,"results":"22","hashOfConfig":"20"},{"size":1271,"mtime":1614284008584,"results":"23","hashOfConfig":"20"},{"size":2726,"mtime":1614296687885,"results":"24","hashOfConfig":"20"},{"size":770,"mtime":1614297782140,"results":"25","hashOfConfig":"20"},{"size":925,"mtime":1614295683089,"results":"26","hashOfConfig":"20"},{"size":3002,"mtime":1614284008586,"results":"27","hashOfConfig":"20"},{"size":2716,"mtime":1614284008586,"results":"28","hashOfConfig":"20"},{"size":500,"mtime":1614299325000,"results":"29","hashOfConfig":"30"},{"size":410,"mtime":1614300478965,"results":"31","hashOfConfig":"30"},{"size":362,"mtime":1614299325000,"results":"32","hashOfConfig":"30"},{"size":864,"mtime":1614302094040,"results":"33","hashOfConfig":"30"},{"size":925,"mtime":1614299325000,"results":"34","hashOfConfig":"30"},{"size":2329,"mtime":1615081779777,"results":"35","hashOfConfig":"30"},{"size":3061,"mtime":1614985564003,"results":"36","hashOfConfig":"30"},{"size":5099,"mtime":1615084078137,"results":"37","hashOfConfig":"30"},{"size":5037,"mtime":1614985456168,"results":"38","hashOfConfig":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"xmwjft",{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"lrb42b",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"60"},"/Users/bubird/Documents/GitHub/femmehacks-pomodoer-app/src/index.js",[],["78","79"],"/Users/bubird/Documents/GitHub/femmehacks-pomodoer-app/src/App.js",["80"],"/Users/bubird/Documents/GitHub/femmehacks-pomodoer-app/src/reportWebVitals.js",[],"/Users/bubird/Documents/GitHub/femmehacks-pomodoer-app/src/Timer.js",[],"/Users/bubird/Documents/GitHub/femmehacks-pomodoer-app/src/ToDoList.js",[],"/Users/bubird/Documents/GitHub/femmehacks-pomodoer-app/src/Collab.js",[],"/Users/bubird/Documents/GitHub/femmehacks-pomodoer-app/src/Home/Home.js",[],"/Users/bubird/Documents/GitHub/femmehacks-pomodoer-app/src/useList.js",[],"/Users/bubird/Documents/GitHub/femmehacks-pomodoer-app/src/useTimer.js",[],"/Users/bubird/Documents/GitHub/pomodoer/src/index.js",[],["81","82"],"/Users/bubird/Documents/GitHub/pomodoer/src/App.js",[],"/Users/bubird/Documents/GitHub/pomodoer/src/reportWebVitals.js",[],"/Users/bubird/Documents/GitHub/pomodoer/src/Collab.js",[],"/Users/bubird/Documents/GitHub/pomodoer/src/Home/Home.js",[],"/Users/bubird/Documents/GitHub/pomodoer/src/Timer.js",["83"],"/Users/bubird/Documents/GitHub/pomodoer/src/ToDoList.js",[],"/Users/bubird/Documents/GitHub/pomodoer/src/useTimer.js",["84","85"],"/Users/bubird/Documents/GitHub/pomodoer/src/useList.js",["86"],"import {useEffect, useRef, useState} from 'react';\nimport socketIOClient from 'socket.io-client';\n\nconst NEW_TASK_EVENT = 'newTaskItem';\n\n//for heroku\n// const SOCKET_SERVER_URL = 'https://pomodoer.herokuapp.com/';\n//for local environ.\nconst SOCKET_SERVER_URL = 'http://localhost:5000';\n\nconst STATUS_CHANGE = 'statusChange'\nconst CLEAR_COMPLETE = 'clearCompleteTasks'\nconst SENDING_USER_ID = 'sendId'\nconst useList = (roomId) => {\n    const [tasks, setTasks] = useState([]);\n    const [statuses, setStatuses] = useState([]);\n    const socketRef = useRef();\n    // console.log('tasks after useList called', tasks)\n\n    useEffect(()=> {\n        console.log('creating new websocket connection');\n        // creates websocket connection\n        socketRef.current = socketIOClient(SOCKET_SERVER_URL, {\n            query:{roomId},\n        });\n\n        // listens for incoming tasks\n        socketRef.current.on(NEW_TASK_EVENT, (task) => {\n            const incomingTask = {\n                ...task,\n                ownedByCurrentUser: task.senderId === socketRef.current.id\n            };\n\n            //adds task to tasks list, adds corresponding status to statuses\n            setTasks((tasks) => [...tasks, incomingTask])\n            const copy = [...statuses];\n            copy.push(false);\n            setStatuses((statuses) => [...statuses, false])\n\n        });\n\n\n        // listens for population \n        socketRef.current.on('populate', (data) => {\n\n            // console.log('populate',data)\n            // console.log(data.length)\n\n            const savedTasks = [...tasks]\n            for (let i=0; i < data.length; i++) {\n                savedTasks.push(data[i])\n            }\n\n            for (let i=0; i<savedTasks.length; i++) {\n                if (savedTasks[i].senderId === socketRef.current.id) {\n                    savedTasks[i].ownedByCurrentUser = true\n                } else { \n                    savedTasks[i].ownedByCurrentUser = false\n                }\n            }\n\n\n            // console.log('saved tasks', savedTasks)\n            setTasks(savedTasks);\n                \n    \n            \n        })\n\n        // listens for status changes\n        socketRef.current.on(STATUS_CHANGE, (data) => {\n            const copy = [...data.status]\n            copy[data.index] = !copy[data.index];\n            setStatuses(copy);\n        })\n\n        // listens for connection\n        socketRef.current.on('connect', ()=>{\n            // console.log(socketRef.current.id)\n            sendId(socketRef.current.id)\n            //maybe add population in here?\n\n        });\n\n        // socketRef.current.on(SENDING_USER_ID, (data) => {\n        //     console.log('listening for sending user id', data)\n        // })\n\n        // listens for clear \n        socketRef.current.on(CLEAR_COMPLETE, (data) => {\n            const indices = []\n            const statusesCopy = []\n            for (let i=0; i < data.status.length; i++) {\n                if (data.status[i] === true) {\n                    indices.push(i)\n                } else {\n                    statusesCopy.push(false)\n                }\n            }\n\n            setStatuses(statusesCopy)\n            // setCompleteIndices(indices)\n            \n\n            // using indices to delete corresponding tasks\n            const copy = [...data.tasks]\n            for (let i=indices.length-1; i>(-1);i--) {\n                copy.splice(indices[i],1)\n            }\n            \n            // corrects owner association\n            for (let i=0; i<copy.length; i++) {\n                if (copy[i].senderId === socketRef.current.id) {\n                    copy[i].ownedByCurrentUser = true\n                } else { \n                    copy[i].ownedByCurrentUser = false\n                }\n            }\n\n            setTasks(copy);\n        })\n\n        // destroy socket reference when the connection is closed\n        return () => {\n            socketRef.current.disconnect();\n        };\n    }, [roomId]);\n\n    //sends message to server that forwards to all users in room\n    const sendTask = (taskBody) => {\n        socketRef.current.emit(NEW_TASK_EVENT, {\n            body: taskBody,\n            senderId: socketRef.current.id,\n            statuses: statuses\n        });\n    }\n\n    // sends user Id to server\n    const sendId = (userId) => {\n        socketRef.current.emit(SENDING_USER_ID, {\n            userId: userId\n        });\n    }\n\n    //sends status change to server\n    const sendStatus = (index,statuses) => {\n        socketRef.current.emit(STATUS_CHANGE, {\n            index: index,\n            status: statuses,\n        })\n    }\n\n    //sends clear notif to server\n    const sendClear = (statuses,tasks) => {\n        socketRef.current.emit(CLEAR_COMPLETE, {\n            status: statuses,\n            tasks: tasks,\n        }) \n    }\n\n    // const populateTasks = (tasks) => {\n    //     socketRef.current.emit('populate', {\n    //         tasks:tasks,\n    //     })\n    // }\n\n\n    return {tasks, sendTask, statuses, sendStatus, sendClear}\n}\n\nexport default useList",{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":2,"column":50,"nodeType":"93","messageId":"94","endLine":2,"endColumn":54},{"ruleId":"87","replacedBy":"95"},{"ruleId":"89","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":25,"column":29,"nodeType":"99","endLine":25,"endColumn":41,"suggestions":"100"},{"ruleId":"91","severity":1,"message":"101","line":18,"column":5,"nodeType":"93","messageId":"94","endLine":18,"endColumn":15},{"ruleId":"97","severity":1,"message":"102","line":112,"column":8,"nodeType":"99","endLine":112,"endColumn":16,"suggestions":"103"},{"ruleId":"97","severity":1,"message":"104","line":127,"column":8,"nodeType":"99","endLine":127,"endColumn":16,"suggestions":"105"},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar",["106"],["107"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'playSound'. Either include it or remove the dependency array.","ArrayExpression",["108"],"'clientData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'action', 'clock', 'countdown', 'display', and 'infoReceived'. Either include them or remove the dependency array.",["109"],"React Hook useEffect has missing dependencies: 'statuses' and 'tasks'. Either include them or remove the dependency array.",["110"],"no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},"Update the dependencies array to be: [alarmSound, playSound]",{"range":"117","text":"118"},"Update the dependencies array to be: [action, clock, countdown, display, infoReceived, roomId]",{"range":"119","text":"120"},"Update the dependencies array to be: [roomId, statuses, tasks]",{"range":"121","text":"122"},[685,697],"[alarmSound, playSound]",[3395,3403],"[action, clock, countdown, display, infoReceived, roomId]",[3957,3965],"[roomId, statuses, tasks]"]