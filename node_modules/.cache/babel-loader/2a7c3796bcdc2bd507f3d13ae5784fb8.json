{"ast":null,"code":"import _slicedToArray from\"/Users/bubird/Documents/GitHub/pomodoer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useRef}from'react';import socketIOClient from'socket.io-client';var SOCKET_SERVER_URL='http://localhost:5000';var PASSWORD_PLEASE='requestPassword';var ADD_PASSWORD='addPassword';var useCollab=function useCollab(roomId){var socketRef=useRef();var _useState=useState(''),_useState2=_slicedToArray(_useState,2),databasePassword=_useState2[0],setDatabasePassword=_useState2[1];useEffect(function(){socketRef.current=socketIOClient(SOCKET_SERVER_URL,{query:{roomId:roomId}});//listens for password from server\nsocketRef.current.on(PASSWORD_PLEASE,function(data){setDatabasePassword(data);console.log('password data',JSON.stringify(data));});});var sendPassword=function sendPassword(password){socketRef.current.emit(ADD_PASSWORD,{password:password});};// useEffect(()=>{\nreturn{databasePassword:databasePassword,sendPassword:sendPassword};};export default useCollab;","map":{"version":3,"sources":["/Users/bubird/Documents/GitHub/pomodoer/src/useCollab.js"],"names":["React","useState","useEffect","useRef","socketIOClient","SOCKET_SERVER_URL","PASSWORD_PLEASE","ADD_PASSWORD","useCollab","roomId","socketRef","databasePassword","setDatabasePassword","current","query","on","data","console","log","JSON","stringify","sendPassword","password","emit"],"mappings":"8JAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAwBC,SAAxB,CAAkCC,MAAlC,KAA+C,OAA/C,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CAEA,GAAMC,CAAAA,iBAAiB,CAAG,uBAA1B,CACA,GAAMC,CAAAA,eAAe,CAAG,iBAAxB,CACA,GAAMC,CAAAA,YAAY,CAAG,aAArB,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,MAAD,CAAY,CAC1B,GAAMC,CAAAA,SAAS,CAAGP,MAAM,EAAxB,CAD0B,cAEsBF,QAAQ,CAAC,EAAD,CAF9B,wCAEnBU,gBAFmB,eAEDC,mBAFC,eAI1BV,SAAS,CAAC,UAAM,CACZQ,SAAS,CAACG,OAAV,CAAoBT,cAAc,CAACC,iBAAD,CAAoB,CAClDS,KAAK,CAAC,CAACL,MAAM,CAANA,MAAD,CAD4C,CAApB,CAAlC,CAIA;AACAC,SAAS,CAACG,OAAV,CAAkBE,EAAlB,CAAqBT,eAArB,CAAsC,SAACU,IAAD,CAAU,CAC5CJ,mBAAmB,CAACI,IAAD,CAAnB,CACAC,OAAO,CAACC,GAAR,CAAY,eAAZ,CAA4BC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAA5B,EACH,CAHD,EAMH,CAZQ,CAAT,CAeA,GAAMK,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,QAAD,CAAc,CAC/BZ,SAAS,CAACG,OAAV,CAAkBU,IAAlB,CAAuBhB,YAAvB,CAAqC,CACjCe,QAAQ,CAAEA,QADuB,CAArC,EAGH,CAJD,CAKA;AAGD,MAAO,CAACX,gBAAgB,CAAhBA,gBAAD,CAAmBU,YAAY,CAAZA,YAAnB,CAAP,CAEF,CA7BD,CA+BA,cAAeb,CAAAA,SAAf","sourcesContent":["import React, {useState,useEffect,useRef} from 'react';\nimport socketIOClient from 'socket.io-client';\n\nconst SOCKET_SERVER_URL = 'http://localhost:5000';\nconst PASSWORD_PLEASE = 'requestPassword';\nconst ADD_PASSWORD = 'addPassword';\n\nconst useCollab = (roomId) => {\n    const socketRef = useRef();\n    const [databasePassword, setDatabasePassword] = useState('')\n  \n    useEffect(() => {\n        socketRef.current = socketIOClient(SOCKET_SERVER_URL, {\n            query:{roomId},\n        });\n\n        //listens for password from server\n        socketRef.current.on(PASSWORD_PLEASE, (data) => {\n            setDatabasePassword(data)\n            console.log('password data',JSON.stringify(data))\n        });\n        \n          \n    })\n\n  \n    const sendPassword = (password) => {\n        socketRef.current.emit(ADD_PASSWORD, {\n            password: password\n        });\n    }\n    // useEffect(()=>{\n      \n  \n   return {databasePassword, sendPassword}  \n    \n}\n\nexport default useCollab"]},"metadata":{},"sourceType":"module"}