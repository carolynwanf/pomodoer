{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport socketIOClient from 'socket.io-client';\nconst SOCKET_SERVER_URL = 'http://localhost:5000';\nconst PASSWORD_PLEASE = 'requestPassword';\nconst ADD_PASSWORD = 'addPassword';\n\nconst useCollab = roomId => {\n  _s();\n\n  const socketRef = useRef();\n  const [databasePassword, setDatabasePassword] = useState('');\n  useEffect(() => {\n    socketRef.current = socketIOClient(SOCKET_SERVER_URL, {\n      query: {\n        roomId\n      }\n    }); //listens for password from server\n\n    socketRef.current.on(PASSWORD_PLEASE, data => {\n      setDatabasePassword(data);\n      console.log('password data', JSON.stringify(data));\n    });\n  });\n\n  const sendPassword = password => {\n    socketRef.current.emit(ADD_PASSWORD, {\n      password: password\n    });\n  }; // useEffect(()=>{\n\n\n  return {\n    databasePassword,\n    sendPassword\n  };\n};\n\n_s(useCollab, \"p2Q5RV3VN42QPf9TVNFzEqBxO58=\");\n\nexport default useCollab;","map":{"version":3,"sources":["/Users/bubird/Documents/GitHub/pomodoer/src/useCollab.js"],"names":["React","useState","useEffect","useRef","socketIOClient","SOCKET_SERVER_URL","PASSWORD_PLEASE","ADD_PASSWORD","useCollab","roomId","socketRef","databasePassword","setDatabasePassword","current","query","on","data","console","log","JSON","stringify","sendPassword","password","emit"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,EAAkCC,MAAlC,QAA+C,OAA/C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,MAAMC,iBAAiB,GAAG,uBAA1B;AACA,MAAMC,eAAe,GAAG,iBAAxB;AACA,MAAMC,YAAY,GAAG,aAArB;;AAEA,MAAMC,SAAS,GAAIC,MAAD,IAAY;AAAA;;AAC1B,QAAMC,SAAS,GAAGP,MAAM,EAAxB;AACA,QAAM,CAACQ,gBAAD,EAAmBC,mBAAnB,IAA0CX,QAAQ,CAAC,EAAD,CAAxD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,SAAS,CAACG,OAAV,GAAoBT,cAAc,CAACC,iBAAD,EAAoB;AAClDS,MAAAA,KAAK,EAAC;AAACL,QAAAA;AAAD;AAD4C,KAApB,CAAlC,CADY,CAKZ;;AACAC,IAAAA,SAAS,CAACG,OAAV,CAAkBE,EAAlB,CAAqBT,eAArB,EAAuCU,IAAD,IAAU;AAC5CJ,MAAAA,mBAAmB,CAACI,IAAD,CAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4BC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAA5B;AACH,KAHD;AAMH,GAZQ,CAAT;;AAeA,QAAMK,YAAY,GAAIC,QAAD,IAAc;AAC/BZ,IAAAA,SAAS,CAACG,OAAV,CAAkBU,IAAlB,CAAuBhB,YAAvB,EAAqC;AACjCe,MAAAA,QAAQ,EAAEA;AADuB,KAArC;AAGH,GAJD,CAnB0B,CAwB1B;;;AAGD,SAAO;AAACX,IAAAA,gBAAD;AAAmBU,IAAAA;AAAnB,GAAP;AAEF,CA7BD;;GAAMb,S;;AA+BN,eAAeA,SAAf","sourcesContent":["import React, {useState,useEffect,useRef} from 'react';\nimport socketIOClient from 'socket.io-client';\n\nconst SOCKET_SERVER_URL = 'http://localhost:5000';\nconst PASSWORD_PLEASE = 'requestPassword';\nconst ADD_PASSWORD = 'addPassword';\n\nconst useCollab = (roomId) => {\n    const socketRef = useRef();\n    const [databasePassword, setDatabasePassword] = useState('')\n  \n    useEffect(() => {\n        socketRef.current = socketIOClient(SOCKET_SERVER_URL, {\n            query:{roomId},\n        });\n\n        //listens for password from server\n        socketRef.current.on(PASSWORD_PLEASE, (data) => {\n            setDatabasePassword(data)\n            console.log('password data',JSON.stringify(data))\n        });\n        \n          \n    })\n\n  \n    const sendPassword = (password) => {\n        socketRef.current.emit(ADD_PASSWORD, {\n            password: password\n        });\n    }\n    // useEffect(()=>{\n      \n  \n   return {databasePassword, sendPassword}  \n    \n}\n\nexport default useCollab"]},"metadata":{},"sourceType":"module"}