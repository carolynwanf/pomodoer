{"ast":null,"code":"var _jsxFileName = \"/Users/bubird/Documents/GitHub/pomodoer/src/Timer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport useTimer from './useTimer';\nimport './ToDoList.css';\nimport useSound from 'use-sound';\nimport audio from './alarm_chime.mp3';\nimport StartAudioContext from 'startaudiocontext'; // import { __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED } from 'react-dom';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nStartAudioContext(OurTimer.context);\n\nconst OurTimer = props => {\n  _s();\n\n  const roomId = props.room;\n  const {\n    start,\n    sendStart,\n    work,\n    sendWork,\n    display,\n    alarmSound,\n    infoReceived\n  } = useTimer(roomId);\n  const [playSound] = useSound(audio, {\n    volume: 0.75\n  });\n\n  const conditionalPlay = () => {\n    console.log(alarmSound);\n\n    if (alarmSound === true) {\n      playSound();\n    }\n  };\n\n  useEffect(conditionalPlay, [alarmSound]); //click handlers\n\n  const handleStart = () => sendStart(start);\n\n  const handleWork = () => {\n    sendWork(work);\n  }; //variables for display\n\n\n  let startStatus = start ? 'STOP' : 'START';\n  let workStatus = work ? 'REST' : 'WORK'; //adds zero when seconds gets into single digits\n\n  if (infoReceived === false) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"timerTimer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  } else {\n    const minutes = Math.floor(display / 1000 / 60);\n    const seconds = Math.floor(display / 1000 % 60);\n    let secondsDisplay;\n\n    if (seconds < 10) {\n      secondsDisplay = '0' + seconds;\n    } else {\n      secondsDisplay = seconds;\n    }\n\n    const time = minutes + ':' + secondsDisplay;\n    const newTitle = time + ' POMODOER';\n\n    if (document.title !== newTitle) {\n      document.title = newTitle;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"timerTimer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttons\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              className: \"startButton\",\n              onClick: handleStart,\n              children: [startStatus, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              className: \"workButton\",\n              onClick: handleWork,\n              children: workStatus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"timerMargin\",\n            children: time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(OurTimer, \"auitR/0UG2rrb+7+3cInNrwGxcM=\", false, function () {\n  return [useTimer, useSound];\n});\n\n_c = OurTimer;\nexport default OurTimer;\n\nvar _c;\n\n$RefreshReg$(_c, \"OurTimer\");","map":{"version":3,"sources":["/Users/bubird/Documents/GitHub/pomodoer/src/Timer.js"],"names":["React","useEffect","Button","useTimer","useSound","audio","StartAudioContext","OurTimer","context","props","roomId","room","start","sendStart","work","sendWork","display","alarmSound","infoReceived","playSound","volume","conditionalPlay","console","log","handleStart","handleWork","startStatus","workStatus","minutes","Math","floor","seconds","secondsDisplay","time","newTitle","document","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,gBAAP;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,iBAAP,MAA+B,mBAA/B,C,CACA;;;AAEAA,iBAAiB,CAACC,QAAQ,CAACC,OAAV,CAAjB;;AAEA,MAAMD,QAAQ,GAAIE,KAAD,IAAW;AAAA;;AAC1B,QAAMC,MAAM,GAAID,KAAK,CAACE,IAAtB;AACA,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA,SAAR;AAAmBC,IAAAA,IAAnB;AAAyBC,IAAAA,QAAzB;AAAmCC,IAAAA,OAAnC;AAA4CC,IAAAA,UAA5C;AAAwDC,IAAAA;AAAxD,MAAwEf,QAAQ,CAACO,MAAD,CAAtF;AAGA,QAAM,CAACS,SAAD,IAAcf,QAAQ,CAC1BC,KAD0B,EAE1B;AAAEe,IAAAA,MAAM,EAAE;AAAV,GAF0B,CAA5B;;AAKA,QAAMC,eAAe,GAAG,MAAM;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAYN,UAAZ;;AACA,QAAIA,UAAU,KAAG,IAAjB,EAAuB;AACrBE,MAAAA,SAAS;AACV;AACF,GALD;;AAOAlB,EAAAA,SAAS,CAACoB,eAAD,EAAiB,CAACJ,UAAD,CAAjB,CAAT,CAjB0B,CAmB1B;;AACA,QAAMO,WAAW,GAAG,MAAMX,SAAS,CAACD,KAAD,CAAnC;;AAEA,QAAMa,UAAU,GAAG,MAAM;AACvBV,IAAAA,QAAQ,CAACD,IAAD,CAAR;AACD,GAFD,CAtB0B,CA0B1B;;;AACA,MAAIY,WAAW,GAAId,KAAK,GAAG,MAAH,GAAY,OAApC;AACA,MAAIe,UAAU,GAAIb,IAAI,GAAG,MAAH,GAAY,MAAlC,CA5B0B,CA6B1B;;AAGA,MAAII,YAAY,KAAK,KAArB,EAA4B;AAC1B,wBACE;AAAA,6BAEI;AAAS,QAAA,SAAS,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YADF;AAQD,GATD,MASO;AACL,UAAMU,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWd,OAAO,GAAC,IAAR,GAAa,EAAxB,CAAhB;AACA,UAAMe,OAAO,GAAGF,IAAI,CAACC,KAAL,CAAYd,OAAO,GAAC,IAAT,GAAiB,EAA5B,CAAhB;AACA,QAAIgB,cAAJ;;AACA,QAAID,OAAO,GAAG,EAAd,EAAkB;AAChBC,MAAAA,cAAc,GAAG,MAAID,OAArB;AACD,KAFD,MAEO;AACLC,MAAAA,cAAc,GAAGD,OAAjB;AACD;;AAED,UAAME,IAAI,GAAGL,OAAO,GAAG,GAAV,GAAgBI,cAA7B;AACA,UAAME,QAAQ,GAAID,IAAI,GAAG,WAAzB;;AACA,QAAIE,QAAQ,CAACC,KAAT,KAAmBF,QAAvB,EAAiC;AAC/BC,MAAAA,QAAQ,CAACC,KAAT,GAAiBF,QAAjB;AACD;;AACD,wBAEE;AAAA,6BAEI;AAAS,QAAA,SAAS,EAAC,YAAnB;AAAA,+BACE;AAAA,kCACE;AAAK,YAAA,SAAS,EAAG,SAAjB;AAAA,oCACE,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,WAAhB;AAA4B,cAAA,SAAS,EAAC,aAAtC;AAAoD,cAAA,OAAO,EAAEV,WAA7D;AAAA,yBAA4EE,WAA5E;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EACqG,GADrG,eAEE,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,WAAhB;AAA4B,cAAA,SAAS,EAAC,YAAtC;AAAkD,cAAA,OAAO,EAAGD,UAA5D;AAAA,wBAA0EE;AAA1E;AAAA;AAAA;AAAA;AAAA,oBAFF,EAEiG,GAFjG;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE;AAAI,YAAA,SAAS,EAAC,aAAd;AAAA,sBAA6BM;AAA7B;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAgBD;AACF,CAzED;;GAAM1B,Q;UAE0EJ,Q,EAG1DC,Q;;;KALhBG,Q;AA2EN,eAAeA,QAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport useTimer from './useTimer';\nimport './ToDoList.css'\nimport useSound from 'use-sound';\nimport audio from './alarm_chime.mp3'\nimport StartAudioContext from  'startaudiocontext'\n// import { __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED } from 'react-dom';\n\nStartAudioContext(OurTimer.context)\n\nconst OurTimer = (props) => {\n  const roomId =  props.room;\n  const {start, sendStart, work, sendWork, display, alarmSound, infoReceived} = useTimer(roomId)\n\n  \n  const [playSound] = useSound(\n    audio,\n    { volume: 0.75 }\n  );\n\n  const conditionalPlay = () => {\n    console.log(alarmSound)\n    if (alarmSound===true) {\n      playSound()\n    }\n  }\n\n  useEffect(conditionalPlay,[alarmSound])\n\n  //click handlers\n  const handleStart = () => sendStart(start);\n\n  const handleWork = () => {\n    sendWork(work)\n  }\n\n  //variables for display\n  let startStatus = (start ? 'STOP' : 'START');\n  let workStatus = (work ? 'REST' : 'WORK');\n  //adds zero when seconds gets into single digits\n\n\n  if (infoReceived === false) {\n    return (\n      <section>\n\n          <section className=\"timerTimer\">\n  \n        </section> \n      </section>\n    )\n  } else {\n    const minutes = Math.floor(display/1000/60);\n    const seconds = Math.floor((display/1000) % 60);\n    let secondsDisplay;\n    if (seconds < 10) {\n      secondsDisplay = '0'+seconds\n    } else {\n      secondsDisplay = seconds\n    }\n    \n    const time = minutes + ':' + secondsDisplay\n    const newTitle =  time + ' POMODOER'\n    if (document.title !== newTitle) {\n      document.title = newTitle;\n    }\n    return (\n    \n      <section>\n          \n          <section className=\"timerTimer\">\n            <div>\n              <div className = 'buttons'>\n                <Button variant=\"secondary\" className='startButton' onClick={handleStart} >{startStatus} </Button>{' '}\n                <Button variant=\"secondary\" className='workButton'onClick ={handleWork} >{workStatus}</Button>{' '} \n              </div> \n              <h1 className='timerMargin'>{time}</h1>\n            </div>\n  \n        </section> \n      </section>\n    )\n  }\n}\n\nexport default OurTimer\n"]},"metadata":{},"sourceType":"module"}