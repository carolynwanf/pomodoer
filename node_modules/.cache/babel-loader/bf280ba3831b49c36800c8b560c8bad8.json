{"ast":null,"code":"var _jsxFileName = \"/Users/bubird/Documents/GitHub/pomodoer/src/Collab.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport socketIOClient from 'socket.io-client';\nimport ToDoList from \"./ToDoList\";\nimport './ToDoList.css';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\nimport OurTimer from './Timer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SOCKET_SERVER_URL = 'http://localhost:5000';\nconst PASSWORD_PLEASE = 'requestPassword';\nconst socketRef = useRef();\nsocketRef.current.on(PASSWORD_PLEASE, data => {\n  console.log('password data', JSON.stringify(data));\n});\n\nconst Collab = props => {\n  _s();\n\n  const {\n    roomId\n  } = props.match.params;\n  const [askForPassword, setAskForPassword] = useState(true);\n  const [password, setPassword] = useState('');\n  socketRef.current = socketIOClient(SOCKET_SERVER_URL, {\n    query: {\n      roomId\n    }\n  });\n  useEffect(() => {});\n\n  const handleChange = e => {\n    setPassword(e.target.value);\n  }; // sends task to server so it shows up for both people\n\n\n  const handleSubmit = () => {// sendTask(newTask);\n    // setNewTask('')\n    // if password = password from database, set askForPassword to false\n    // if there is no password in database, send {password} to database database and set askForPassword to false\n    // else, if password !== password from database, set askForPassword to true + display \"wrong password\"\n  }; // makes it so that hitting the enter key also works for submission\n\n\n  const handleEnter = e => {\n    if (e.key === 'Enter') {\n      handleSubmit();\n    }\n  };\n\n  if (askForPassword) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"PASSWORD:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        value: password,\n        type: \"text\",\n        placeholder: \"enter a password...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"tertiary\",\n        className: \"addTask\",\n        onClick: handleSubmit,\n        children: \"ENTER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"collab-header\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/`,\n            className: \"home-button\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"pomodoer\",\n              children: \"POMODOER\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer\",\n        children: /*#__PURE__*/_jsxDEV(OurTimer, {\n          room: roomId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"ROOM: \", roomId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ToDoList, {\n        room: roomId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(Collab, \"spDba4gaP3XXAWvALIxQ97KYLCI=\");\n\n_c = Collab;\nexport default Collab;\n\nvar _c;\n\n$RefreshReg$(_c, \"Collab\");","map":{"version":3,"sources":["/Users/bubird/Documents/GitHub/pomodoer/src/Collab.js"],"names":["React","useState","useEffect","useRef","socketIOClient","ToDoList","Button","Link","OurTimer","SOCKET_SERVER_URL","PASSWORD_PLEASE","socketRef","current","on","data","console","log","JSON","stringify","Collab","props","roomId","match","params","askForPassword","setAskForPassword","password","setPassword","query","handleChange","e","target","value","handleSubmit","handleEnter","key"],"mappings":"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","sourcesContent":["import React, {useState,useEffect,useRef} from 'react';\nimport socketIOClient from 'socket.io-client';\nimport ToDoList from \"./ToDoList\"\nimport './ToDoList.css';\nimport Button from 'react-bootstrap/Button'\n\nimport {Link} from 'react-router-dom'\n\nimport OurTimer from './Timer';\n\nconst SOCKET_SERVER_URL = 'http://localhost:5000';\nconst PASSWORD_PLEASE = 'requestPassword';\n\nconst socketRef = useRef();\nsocketRef.current.on(PASSWORD_PLEASE, (data) => {\n  console.log('password data',JSON.stringify(data))\n})\n\nconst Collab = (props) => {\n  const {roomId} =  props.match.params;\n  const [askForPassword, setAskForPassword] = useState(true);\n\n  const [password, setPassword] = useState('')\n\n  \n\n  socketRef.current = socketIOClient(SOCKET_SERVER_URL, {\n    query:{roomId},\n  });\n\n  useEffect(()=>{\n    \n\n   \n  })\n\n  const handleChange = (e) => {\n    setPassword(e.target.value);\n  }\n\n  // sends task to server so it shows up for both people\n  const handleSubmit = () => {\n    // sendTask(newTask);\n    // setNewTask('')\n    // if password = password from database, set askForPassword to false\n    // if there is no password in database, send {password} to database database and set askForPassword to false\n    // else, if password !== password from database, set askForPassword to true + display \"wrong password\"\n  }\n\n// makes it so that hitting the enter key also works for submission\n  const handleEnter = (e) => {\n      if (e.key === 'Enter') {\n          handleSubmit()\n      }\n  }\n\n  if (askForPassword) {\n    return (\n      <div>\n        <p>PASSWORD:</p>\n        <input\n          onChange = {handleChange}\n          value = {password}\n          type='text'\n          placeholder='enter a password...'\n        ></input>\n         <Button variant='tertiary' className = 'addTask' onClick={handleSubmit}>ENTER</Button>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"App\">\n          <div className=\"App-header\">\n            <header className='collab-header'>\n              <Link to ={`/`} className='home-button'> \n                <h1 className='pomodoer'>\n                  POMODOER\n                </h1> \n              </Link>\n            </header>\n         </div>\n          <div className='timer'>\n            <OurTimer room={roomId}/> \n          </div>\n          <h2>ROOM: {roomId}</h2>\n          <ToDoList room={roomId}/>\n        \n      </div>\n    );\n  }\n}\n\nexport default Collab;"]},"metadata":{},"sourceType":"module"}