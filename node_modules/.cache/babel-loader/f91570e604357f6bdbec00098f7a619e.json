{"ast":null,"code":"var _jsxFileName = \"/Users/bubird/Documents/GitHub/pomodoer/src/Timer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport useTimer from './useTimer';\nimport './ToDoList.css';\nimport useSound from 'use-sound';\nimport audio from './alarm_chime.mp3'; // import { __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED } from 'react-dom';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OurTimer = props => {\n  _s();\n\n  const roomId = props.room;\n  const {\n    start,\n    sendStart,\n    work,\n    sendWork,\n    minutes,\n    seconds,\n    alarmSound\n  } = useTimer(roomId);\n  console.log('status', start);\n  const [playSound] = useSound(audio, {\n    volume: 0.75\n  });\n\n  const conditionalPlay = () => {\n    console.log(alarmSound);\n\n    if (alarmSound === true) {\n      playSound();\n    }\n  };\n\n  useEffect(conditionalPlay, [alarmSound]);\n  console.log(audio); //click handlers\n\n  const handleStart = () => sendStart(start);\n\n  const handleWork = () => {\n    sendWork(work);\n  }; //variables for display\n\n\n  let startStatus = start ? 'STOP' : 'START';\n  let workStatus = work ? 'REST' : 'WORK'; //adds zero when seconds gets into single digits\n\n  let secondsDisplay;\n\n  if (seconds < 10) {\n    secondsDisplay = '0' + seconds;\n  } else {\n    secondsDisplay = seconds;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"timerTimer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: handleStart,\n            children: [startStatus, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: handleWork,\n            children: workStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"timerMargin\",\n          children: minutes + ':' + secondsDisplay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OurTimer, \"KnWzh0XJecuB7y3TcgZj94yGpD4=\", false, function () {\n  return [useTimer, useSound];\n});\n\n_c = OurTimer;\nexport default OurTimer;\n\nvar _c;\n\n$RefreshReg$(_c, \"OurTimer\");","map":{"version":3,"sources":["/Users/bubird/Documents/GitHub/pomodoer/src/Timer.js"],"names":["React","useEffect","Button","useTimer","useSound","audio","OurTimer","props","roomId","room","start","sendStart","work","sendWork","minutes","seconds","alarmSound","console","log","playSound","volume","conditionalPlay","handleStart","handleWork","startStatus","workStatus","secondsDisplay"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,gBAAP;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,mBAAlB,C,CACA;;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAMC,MAAM,GAAID,KAAK,CAACE,IAAtB;AACA,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA,SAAR;AAAmBC,IAAAA,IAAnB;AAAyBC,IAAAA,QAAzB;AAAmCC,IAAAA,OAAnC;AAA4CC,IAAAA,OAA5C;AAAqDC,IAAAA;AAArD,MAAmEb,QAAQ,CAACK,MAAD,CAAjF;AAEAS,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBR,KAAtB;AACA,QAAM,CAACS,SAAD,IAAcf,QAAQ,CAC1BC,KAD0B,EAE1B;AAAEe,IAAAA,MAAM,EAAE;AAAV,GAF0B,CAA5B;;AAKA,QAAMC,eAAe,GAAG,MAAM;AAC5BJ,IAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;;AACA,QAAIA,UAAU,KAAG,IAAjB,EAAuB;AACrBG,MAAAA,SAAS;AACV;AACF,GALD;;AAOAlB,EAAAA,SAAS,CAACoB,eAAD,EAAiB,CAACL,UAAD,CAAjB,CAAT;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYb,KAAZ,EApB0B,CAsB1B;;AACA,QAAMiB,WAAW,GAAG,MAAMX,SAAS,CAACD,KAAD,CAAnC;;AAEA,QAAMa,UAAU,GAAG,MAAM;AACvBV,IAAAA,QAAQ,CAACD,IAAD,CAAR;AACD,GAFD,CAzB0B,CA6B1B;;;AACA,MAAIY,WAAW,GAAId,KAAK,GAAG,MAAH,GAAY,OAApC;AACA,MAAIe,UAAU,GAAIb,IAAI,GAAG,MAAH,GAAY,MAAlC,CA/B0B,CAgC1B;;AACA,MAAIc,cAAJ;;AACA,MAAIX,OAAO,GAAG,EAAd,EAAkB;AAChBW,IAAAA,cAAc,GAAG,MAAIX,OAArB;AACD,GAFD,MAEO;AACLW,IAAAA,cAAc,GAAGX,OAAjB;AACD;;AAED,sBAEE;AAAA,2BAEI;AAAS,MAAA,SAAS,EAAC,YAAnB;AAAA,6BACE;AAAA,gCACE;AAAK,UAAA,SAAS,EAAG,SAAjB;AAAA,kCACE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,WAAhB;AAA4B,YAAA,OAAO,EAAEO,WAArC;AAAA,uBAAoDE,WAApD;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAC6E,GAD7E,eAEE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,WAAhB;AAA4B,YAAA,OAAO,EAAGD,UAAtC;AAAA,sBAAoDE;AAApD;AAAA;AAAA;AAAA;AAAA,kBAFF,EAE2E,GAF3E;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA,oBAA6BX,OAAO,GAAG,GAAV,GAAgBY;AAA7C;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UAFF;AAgBD,CAxDD;;GAAMpB,Q;UAEqEH,Q,EAGrDC,Q;;;KALhBE,Q;AA0DN,eAAeA,QAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport useTimer from './useTimer';\nimport './ToDoList.css'\nimport useSound from 'use-sound';\nimport audio from './alarm_chime.mp3'\n// import { __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED } from 'react-dom';\n\nconst OurTimer = (props) => {\n  const roomId =  props.room;\n  const {start, sendStart, work, sendWork, minutes, seconds, alarmSound} = useTimer(roomId)\n\n  console.log('status', start)\n  const [playSound] = useSound(\n    audio,\n    { volume: 0.75 }\n  );\n\n  const conditionalPlay = () => {\n    console.log(alarmSound)\n    if (alarmSound===true) {\n      playSound()\n    }\n  }\n\n  useEffect(conditionalPlay,[alarmSound])\n\n\n  console.log(audio)\n \n  //click handlers\n  const handleStart = () => sendStart(start);\n\n  const handleWork = () => {\n    sendWork(work)\n  }\n\n  //variables for display\n  let startStatus = (start ? 'STOP' : 'START');\n  let workStatus = (work ? 'REST' : 'WORK');\n  //adds zero when seconds gets into single digits\n  let secondsDisplay;\n  if (seconds < 10) {\n    secondsDisplay = '0'+seconds\n  } else {\n    secondsDisplay = seconds\n  }\n\n  return (\n    \n    <section>\n        \n        <section className=\"timerTimer\">\n          <div>\n            <div className = 'buttons'>\n              <Button variant=\"secondary\" onClick={handleStart} >{startStatus} </Button>{' '}\n              <Button variant=\"secondary\" onClick ={handleWork} >{workStatus}</Button>{' '} \n            </div> \n            <h1 className='timerMargin'>{minutes + ':' + secondsDisplay}</h1>\n          </div>\n\n      </section> \n    </section>\n  )\n}\n\nexport default OurTimer\n"]},"metadata":{},"sourceType":"module"}