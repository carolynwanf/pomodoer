{"ast":null,"code":"var _jsxFileName = \"/Users/bubird/Documents/GitHub/pomodoer/src/Timer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport useTimer from './useTimer';\nimport './ToDoList.css';\nimport useSound from 'use-sound';\nimport audio from './alarm_chime.mp3'; // import { __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED } from 'react-dom';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OurTimer = props => {\n  _s();\n\n  const roomId = props.room;\n  const {\n    start,\n    sendStart,\n    work,\n    sendWork,\n    minutes,\n    seconds,\n    alarmSound,\n    infoReceived\n  } = useTimer(roomId);\n  const [playSound] = useSound(audio, {\n    volume: 0.75\n  });\n\n  const conditionalPlay = () => {\n    console.log(alarmSound);\n\n    if (alarmSound === true) {\n      playSound();\n    }\n  };\n\n  useEffect(conditionalPlay, [alarmSound]); //click handlers\n\n  const handleStart = () => sendStart(start);\n\n  const handleWork = () => {\n    sendWork(work);\n  }; //variables for display\n\n\n  let startStatus = start ? 'STOP' : 'START';\n  let workStatus = work ? 'REST' : 'WORK'; //adds zero when seconds gets into single digits\n\n  let secondsDisplay;\n\n  if (seconds < 10) {\n    secondsDisplay = '0' + seconds;\n  } else {\n    secondsDisplay = seconds;\n  }\n\n  const newTitle = minutes + ':' + secondsDisplay + ' POMODOER';\n\n  if (document.title !== newTitle) {\n    document.title = newTitle;\n  }\n\n  if (infoReceived === false) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"timerTimer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttons\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              className: \"startButton\",\n              onClick: handleStart,\n              children: [startStatus, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              className: \"workButton\",\n              onClick: handleWork,\n              children: workStatus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  } else {\n    console.log('info received');\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"timerTimer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttons\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              className: \"startButton\",\n              onClick: handleStart,\n              children: [startStatus, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              className: \"workButton\",\n              onClick: handleWork,\n              children: workStatus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this), ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"timerMargin\",\n            children: minutes + ':' + secondsDisplay\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(OurTimer, \"a3VVY7nc5hxF4Ug7lsUWusGtggI=\", false, function () {\n  return [useTimer, useSound];\n});\n\n_c = OurTimer;\nexport default OurTimer;\n\nvar _c;\n\n$RefreshReg$(_c, \"OurTimer\");","map":{"version":3,"sources":["/Users/bubird/Documents/GitHub/pomodoer/src/Timer.js"],"names":["React","useEffect","Button","useTimer","useSound","audio","OurTimer","props","roomId","room","start","sendStart","work","sendWork","minutes","seconds","alarmSound","infoReceived","playSound","volume","conditionalPlay","console","log","handleStart","handleWork","startStatus","workStatus","secondsDisplay","newTitle","document","title"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport useTimer from './useTimer';\nimport './ToDoList.css'\nimport useSound from 'use-sound';\nimport audio from './alarm_chime.mp3'\n// import { __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED } from 'react-dom';\n\nconst OurTimer = (props) => {\n  const roomId =  props.room;\n  const {start, sendStart, work, sendWork, minutes, seconds, alarmSound, infoReceived} = useTimer(roomId)\n\n  const [playSound] = useSound(\n    audio,\n    { volume: 0.75 }\n  );\n\n  const conditionalPlay = () => {\n    console.log(alarmSound)\n    if (alarmSound===true) {\n      playSound()\n    }\n  }\n\n  useEffect(conditionalPlay,[alarmSound])\n\n  //click handlers\n  const handleStart = () => sendStart(start);\n\n  const handleWork = () => {\n    sendWork(work)\n  }\n\n  //variables for display\n  let startStatus = (start ? 'STOP' : 'START');\n  let workStatus = (work ? 'REST' : 'WORK');\n  //adds zero when seconds gets into single digits\n  let secondsDisplay;\n  if (seconds < 10) {\n    secondsDisplay = '0'+seconds\n  } else {\n    secondsDisplay = seconds\n  }\n\n  const newTitle = minutes + ':' + secondsDisplay + ' POMODOER'\n  if (document.title !== newTitle) {\n    document.title = newTitle;\n}\n\n  if (infoReceived === false) {\n    return (\n      <section>\n\n          <section className=\"timerTimer\">\n            <div>\n              <div className = 'buttons'>\n                <Button variant=\"secondary\" className='startButton' onClick={handleStart} >{startStatus} </Button>{' '}\n                <Button variant=\"secondary\" className='workButton'onClick ={handleWork} >{workStatus}</Button>{' '} \n              </div> \n            </div>\n  \n        </section> \n      </section>\n    )\n  } else {\n    console.log('info received')\n    return (\n    \n      <section>\n          \n          <section className=\"timerTimer\">\n            <div>\n              <div className = 'buttons'>\n                <Button variant=\"secondary\" className='startButton' onClick={handleStart} >{startStatus} </Button>{' '}\n                <Button variant=\"secondary\" className='workButton'onClick ={handleWork} >{workStatus}</Button>{' '} \n              </div> \n              <h1 className='timerMargin'>{minutes + ':' + secondsDisplay}</h1>\n            </div>\n  \n        </section> \n      </section>\n    )\n  }\n}\n\nexport default OurTimer\n"]},"metadata":{},"sourceType":"module"}